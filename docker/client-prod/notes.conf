# nginx Configuration File
# https://wiki.nginx.org/Configuration
# https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts
# https://wiki.debian.org/Nginx/DirectoryStructure
# It's advised to instead add customizations underneath of the conf.d/ directory which is described below

# Run as a less privileged user for security reasons.
# error
# 2020/08/21 16:48:57 [emerg] 1#1: "user" directive is not allowed here in /etc/nginx/conf.d/default.conf:8
# user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Specify where the PID of nginx will be written
pid /nginx.pid;

# Run in foreground
daemon off;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;


# TODO setup proxy
# https://marcofranssen.nl/nginx-1-19-supports-environment-variables-and-templates-in-docker/
# upstream todoapi {
#     server ${TODO_API};
# }

# define an upstream where we reverse proxy the urls that start 
# with /api and a variable to define the port on which Nginx runs

# server {
#     listen            ${NGINX_PORT};
#     listen       [::]:${NGINX_PORT};

#     location /api {
#         proxy_pass http://todoapi;
#     }
# }

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1m;

  # https://docs.microsoft.com/en-us/azure/container-instances/container-instances-container-group-ssl
  # Optimize TLS/SSL by caching session parameters for 10 minutes. 
  # This cuts down on the number of expensive TLS/SSL handshakes.
  # The handshake is the most CPU-intensive operation, and by default 
  # it is re-negotiated on every new/parallel connection.
  # By enabling a cache (of type "shared between all Nginx workers"), 
  # we tell the client to re-use the already negotiated state.
  # Further optimization can be achieved by raising keepalive_timeout, 
  # but that shouldn't be done unless you serve primarily HTTPS.
	
  # Timeout for keep-alive connections. Server will close connections after
	# this time.
  keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;

	# Enable gzipping of responses.
	gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;

server {
    listen            ${NGINX_PORT} default_server;
    listen       [::]:${NGINX_PORT};
    # server_name  ${COMPOSE_PROJECT_NAME}.prod;
    # server_name  ~^(.+)$;

    root   /usr/share/nginx/html;

    location / {
        index  index.html index.htm;
        expires -1;
        try_files $uri $uri/ /index.html;

        # for debugging
        # https://serverfault.com/a/580739/588781
        add_header X-uri "$uri"

        # autoindex on;
        # https://nixcp.com/nginx-autoindex/
        # ngx_http_autoindex_module module is the one in charge of 
        # enabling or disabling directory listing on Nginx. 
        # By default it comes disabled, but you can enable it
        # using the following syntax, see below:
        # Syntax: autoindex on | off;
        # Default: autoindex off;
        # Context: http, server, location
    }

    location /blog {
        index  index.html index.htm;
        expires -1;
        try_files $uri $uri/ /index.html;
    }

    # location /api {
    #     proxy_pass http://todoapi;
    # }

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
        # access_log logs/static.log; # I don't usually include a static log
    }

    # Feed
    location ~* \.(?:rss|atom)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 0;
    gzip_types 
        text/plain
        text/css
        text/xml
        text/x-component;
        text/javascript
      # text/html is always compressed by HttpGzipModule
        application/javascript
        application/xml
        application/xml+rss
        application/x-font-ttf
        application/atom+xml
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-web-app-manifest+json
        application/xhtml+xml
        image/svg+xml
        image/x-icon
        font/opentype;

}
